version: '3.8'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 30s
      timeout: 5s
      retries: 5

  web:
    image: ghcr.io/adithya-rajendran/personal_website:latest
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=resume_website.settings
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=x${EMAIL_HOST_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
      - MY_EMAILS=${MY_EMAILS}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    user: django
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/" ]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:latest
    volumes:
      - static_volume:/usr/src/app/static:ro
      - media_volume:/usr/src/app/media:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      db:
        condition: service_started
      web:
        condition: service_healthy

  tunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}


volumes:
  static_volume:
  media_volume:
